buildscript {
    ext.kotlin_version = '1.8.0-RC2'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id "io.freefair.lombok" version "6.6.1"
}
apply plugin: 'application'
apply plugin: 'kotlin'
apply plugin: 'java'

group 'com.leppy'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url "https://spair.github.io/" }
}

kotlin {
    jvmToolchain(17)
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

project.ext.lwjglVersion = "3.3.1"
project.ext.lwjgl3awtVersion = "0.1.8"
project.ext.steamworks4jserverVersion = "1.9.0"
project.ext.steamworks4jVersion = "1.9.0"
project.ext.lwjglNatives = "natives-windows"
project.ext.jomlVersion = "1.10.5"
project.ext.imguiVersion = "1.86.4"
project.ext.gsonVersion = "2.10"
project.ext.lombokVersion = "1.18.24"

dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-bgfx"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-nanovg"
    implementation "org.lwjgl:lwjgl-nuklear"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-par"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.lwjgl:lwjgl-vulkan"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-bgfx::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nuklear::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-par::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    implementation "org.lwjglx:lwjgl3-awt:$lwjgl3awtVersion"
    implementation "com.code-disaster.steamworks4j:steamworks4j-server:$steamworks4jserverVersion"
    implementation "com.code-disaster.steamworks4j:steamworks4j:$steamworks4jVersion"
    implementation "org.joml:joml:$jomlVersion"
    // implementation fileTree("libs") { include "*.jar" }

    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    ['', '-opengl', '-glfw'].each {
        implementation "org.lwjgl:lwjgl$it:$lwjglVersion"
        implementation "org.lwjgl:lwjgl$it::natives-windows"
    }
    implementation "io.github.spair:imgui-java-binding:$imguiVersion"
    implementation "io.github.spair:imgui-java-lwjgl3:$imguiVersion"
    implementation "io.github.spair:imgui-java-natives-windows:$imguiVersion"

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes (
                // 'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.leppy.redux.Main'
        )
    }

    from {
        // configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task fatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest.from jar.manifest
    classifier = 'all'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

artifacts {
    archives fatJar
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}